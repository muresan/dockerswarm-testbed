---

- name: setup swarm cluster on manager and worker nodes
# =======================================================
  hosts: all
  gather_facts: true
  become: true
  vars:
    distribution: "{{ ansible_distribution | lower }}"
    swarm_port: 2377
    docker_release_channel: "edge"
  tasks:
    - name: ensure https apt transport exists
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common

    - name: add docker-engine apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker-engine apt repository
      apt_repository:
        repo: "deb [arch={{ (ansible_architecture == 'x86_64') | ternary('amd64', ansible_architecture) }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} {{ docker_release_channel }}"
        update_cache: yes
        state: present

    - name: install the docker package
      package:
        name: docker-ce
        state: present

    - name: ensure docker service will start on reboot
      service: name=docker enabled=yes

    - name: add vagrant user to docker group
      user: append=yes groups=docker name=vagrant

    - block:
      - name: initialize a new swarm on manager node
        command: docker swarm init --advertise-addr "{{ ansible_eth1["ipv4"]["address"] }}"

      - name: get join worker token for swarm
        command: docker swarm join-token worker -q
        register: swarm_worker_token

      - name: get join worker token for swarm
        command: docker swarm join-token manager -q
        register: swarm_manager_token

      - name: set join worker token fact
        set_fact: swarm_worker_token="{{ swarm_worker_token.stdout }}"

      - name: set join manager token fact
        set_fact: swarm_manager_token="{{ swarm_manager_token.stdout }}"

      when: inventory_hostname in ['m01']  # perform tasks only on manager node

    - debug: var=hostvars['m01']['swarm_worker_token']
    - debug: var=hostvars['m01']['swarm_manager_token']

    - name: join worker nodes
      command: docker swarm join --token "{{ hostvars['m01']['swarm_worker_token'] }}" "{{ hostvars['m01']['ansible_eth1']['ipv4']['address'] }}:2377"
      when: inventory_hostname[0] == 'w'

    - name: join manager nodes
      command: docker swarm join --token "{{ hostvars['m01']['swarm_manager_token'] }}" "{{ hostvars['m01']['ansible_eth1']['ipv4']['address'] }}:2377"
      when: inventory_hostname[0] == 'm' and inventory_hostname != 'm01'
